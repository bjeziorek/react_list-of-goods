{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","firstGood","secondGood","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","className","type","this","onClick","setState","prevState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAYE,IAAME,EAAoB,SAC/BC,EAD+B,GAG3B,IADFC,EACC,EADDA,SAAUC,EACT,EADSA,WAGNC,EAAY,YAAOH,GAqBzB,OAlBAG,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAUG,cAAcF,GACjC,KAAKT,EAASY,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OACvC,QACE,OAAO,MAITR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,GAKIW,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,4CAME,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBE,KAAKJ,MAAMd,WAAaJ,EAASU,SAAW,WAAa,IACtFa,QAAS,kBAAM,EAAKC,SAAS,CAAEpB,SAAUJ,EAASU,YAHpD,iCAQA,wBACEW,KAAK,SACLD,UAAS,4BAAuBE,KAAKJ,MAAMd,WAAaJ,EAASY,OAAS,WAAa,IACvFW,QAAS,kBAAM,EAAKC,SAAS,CAAEpB,SAAUJ,EAASY,UAHpD,4BAQA,wBACES,KAAK,SACLD,UAAS,4BAAuBE,KAAKJ,MAAMb,WAAa,GAAK,YAC7DkB,QAAS,kBAAM,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACzCpB,YAAaoB,EAAUpB,gBAJ3B,sBAUEiB,KAAKJ,MAAMd,WAAaJ,EAASmB,MAAQG,KAAKJ,MAAMb,aAEpD,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKC,SAAS,CAC3BpB,SAAUJ,EAASmB,KACnBd,YAAY,KALhB,sBAaJ,6BACE,6BACGH,EACCD,EACAqB,KAAKJ,OACLQ,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAxDlD,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b146c83b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\n// Use this function in the render method to prepare goods\nexport const getReorderedGoods = (\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) => {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(secondGood);\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n};\n\n// DON'T save goods to the state\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${this.state.sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n            onClick={() => this.setState({ sortType: SortType.ALPHABET })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${this.state.sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n            onClick={() => this.setState({ sortType: SortType.LENGTH })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${this.state.isReversed ? '' : 'is-light'}`}\n            onClick={() => this.setState(prevState => ({\n              isReversed: !prevState.isReversed,\n            }))}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.setState({\n                sortType: SortType.NONE,\n                isReversed: false,\n              })}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(\n              goodsFromServer,\n              this.state,\n            ).map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}